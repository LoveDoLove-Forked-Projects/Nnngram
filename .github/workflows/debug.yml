name: Debug build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    name: Gradle Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare Java 16
        uses: actions/setup-java@v1
        with:
          java-version: 16
          java-package: jdk
      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v2
        
      - name: Build Cache
        uses: actions/cache@v2
        with:
          path: |
            TMessagesProj/build
          key: build-cache
      - name: Native Cache
        uses: actions/cache@v2
        with:
          path: |
            TMessagesProj/.cxx
          key: jni-${{ hashFiles('TMessagesProj/jni/**') }}
      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('**/*.gradle') }}
      - name: Prepare Environment
        run: |
          sudo apt-get install bison gcc make curl ninja-build ccache -y
          echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;21.4.7075529" --sdk_root=${ANDROID_SDK_ROOT} &> /dev/null
      - name: Debug Build
        run: |
          echo -e "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}\nRELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}\nRELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}">>local.properties
          ./gradlew TMessagesProj:assembleRelease
          echo "APK_FILE=$(find TMessagesProj/build/outputs/apk -name '*arm64-v8a*.apk')" >> $GITHUB_ENV
          echo "APK_FILE_ARMV7=$(find TMessagesProj/build/outputs/apk -name '*armeabi*.apk')" >> $GITHUB_ENV
          echo "APK_FILE_X86=$(find TMessagesProj/build/outputs/apk -name '*x86.apk')" >> $GITHUB_ENV
          echo "APK_FILE_X64=$(find TMessagesProj/build/outputs/apk -name '*x86_64*.apk')" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v2
        name: Upload apk
        with:
          name: Nullgram
          path: TMessagesProj/build/outputs/apk/release/*
      - uses: actions/upload-artifact@v2
        name: Upload apk (arm64-v8a)
        with:
          name: Nullgram-arm64-v8a
          path: ${{ env.APK_FILE }}
      - uses: actions/upload-artifact@v2
        name: Upload apk (armeabi-v7a)
        with:
          name: Nullgram-armeabi-v7a
          path: ${{ env.APK_FILE_ARMV7 }}
      - uses: actions/upload-artifact@v2
        name: Upload apk (x86_64)
        with:
          name: Nullgram-x86_64
          path: ${{ env.APK_FILE_X64 }}
      - uses: actions/upload-artifact@v2
        name: Upload apk (x86)
        with:
          name: Nullgram-x86
          path: ${{ env.APK_FILE_X86 }}

      - name: Post to channel
        if: ${{ github.event_name != 'pull_request' && success() && github.ref == 'refs/heads/master' }}
        env:
          CHANNEL_ID: ${{ secrets.TELEGRAM_TO }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          COMMIT_URL: ${{ github.event.head_commit.url }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          APK_FILE: ${{ env.APK_FILE }}
          APK_FILE_ARMV7: ${{ env.APK_FILE_ARMV7 }}
          APK_FILE_X86: ${{ env.APK_FILE_X86 }}
          APK_FILE_X64: ${{ env.APK_FILE_X64 }}
        run: |
          OUTPUT="TMessagesProj/build/outputs/apk/"
          ESCAPED=`python3 -c 'import json,os,urllib.parse; msg = json.dumps(os.environ["COMMIT_MESSAGE"]); print(urllib.parse.quote(msg if len(msg) <= 1024 else json.dumps(os.environ["COMMIT_URL"])))'`
          curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${CHANNEL_ID}&media=%5B%7B%22type%22%3A%20%22document%22%2C%22media%22%3A%20%22attach%3A%2F%2Farm64%22%7D%2C%7B%22type%22%3A%20%22document%22%2C%22media%22%3A%20%22attach%3A%2F%2Farmeabiv7a%22%7D%2C%7B%22type%22%3A%20%22document%22%2C%22media%22%3A%20%22attach%3A%2F%2Fx86%22%7D%2C%7B%22type%22%3A%20%22document%22%2C%22media%22%3A%20%22attach%3A%2F%2Fx64%22%2C%22caption%22%3A%24%7BESCAPED%7D%7D%5D"  -F arm64="@$APK_FILE" -F armeabiv7a="@$APK_FILE_ARMV7" -F x86="@$APK_FILE_X86" -F x64="@$APK_FILE_X64"

