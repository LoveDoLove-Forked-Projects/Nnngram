plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}
apply plugin: 'kotlin-android'

repositories {
    mavenCentral()
    google()
}

configurations.all {
    exclude group: 'com.google.firebase', module: 'firebase-core'
    exclude group: 'androidx.recyclerview', module: 'recyclerview'
}

def isPreview = true

dependencies {
    implementation 'androidx.core:core:1.6.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.sharetarget:sharetarget:1.1.0"

    compileOnly 'org.checkerframework:checker-qual:3.21.0'
    compileOnly 'org.checkerframework:checker-compat-qual:2.5.5'
    implementation 'com.google.firebase:firebase-messaging:23.0.0'
    implementation 'com.google.firebase:firebase-config:21.0.1'
    implementation 'com.google.firebase:firebase-datatransport:18.1.1'
    implementation 'com.google.firebase:firebase-appindexing:20.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-wearable:17.1.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-wallet:18.1.3'
    implementation 'com.googlecode.mp4parser:isoparser:1.0.6'
    implementation 'com.stripe:stripe-android:2.0.2'
    implementation 'com.google.mlkit:language-id:16.1.1'
    implementation files('libs/libgsaverification-client.aar')
    implementation 'cn.hutool:hutool-all:5.7.18'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    implementation 'com.alibaba:fastjson:1.2.79'


    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

ext.abiCodes = ['armeabi-v7a':1, 'arm64-v8a':5, x86:2, x86_64:6, 'universal':0]

def officialVersionName = "8.5.0"

android {
    compileSdkVersion 31
    buildToolsVersion '32.0.0'
    ndkVersion "21.4.7075529"

    defaultConfig.applicationId = "top.qwq2333.nullgram"

    sourceSets.main.jniLibs.srcDirs = ['./jni/']


    externalNativeBuild {
        cmake {
            path 'jni/CMakeLists.txt'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        disable 'BlockedPrivateApi'
    }

    packagingOptions {
        resources {
            excludes += '**'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11

        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    def keystorePwd = null
    def alias = null
    def pwd = null
    if (project.rootProject.file('local.properties').exists()) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        keystorePwd = properties.getProperty("RELEASE_STORE_PASSWORD")
        alias = properties.getProperty("RELEASE_KEY_ALIAS")
        pwd = properties.getProperty("RELEASE_KEY_PASSWORD")
    }

    signingConfigs {
        release {
            storeFile file("config/release.keystore")
            storePassword keystorePwd != null ? keystorePwd : System.getenv("KEYSTORE_PASS")
            keyAlias alias != null ? alias : System.getenv("ALIAS_NAME")
            keyPassword pwd != null ? pwd : System.getenv("ALIAS_PASS")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
            applicationIdSuffix ".beta"
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-rules.pro'
        }
    }
    /* DO NOT MODIFY THIS LINE
    OTHERWISE YOU WILL GET ANNOYED MERGE CONFLICT
    defaultConfig.versionCode = 2547
    */

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def abi = output.getFilter('ABI')
            buildConfigField 'String', 'BUILD_ABI', "\""+ abi + "\""
            outputFileName = "Nullgram-${defaultConfig.versionName}-${abi}.apk"
        }
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30

        if (isPreview){
            versionName "v" + officialVersionName + "-preview-" + (Common.getGitHeadRefsSuffix(rootProject))
        } else {
            versionName "v" + officialVersionName + (Common.getGitHeadRefsSuffix(rootProject))
        }


        versionCode =  Common.getTimestamp()

        externalNativeBuild {
            cmake {
                version '3.10.2'
                arguments '-DANDROID_STL=c++_static', '-DANDROID_PLATFORM=android-21', "-DNDK_CCACHE=ccache", "-j=16"
            }
        }
    }

    splits.abi {
        enable true
        universalApk false
    }

    dependenciesInfo.includeInApk false
}

task replaceIcon (type: ReplaceIcon)
preBuild.dependsOn replaceIcon
